// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        android_gradle_ver = '4.1.0'

        compile_sdk_ver = 30
        build_tools_ver = '30.0.2'

        min_sdk_ver = 19
        compile_sdk_ver = 30

        version_code = 2
        version_name = "1.0.0"

        kotlin_ver = '1.4.10'
        coroutines_ver = '1.4.0'

        ax_core_ver = '1.3.2'
        ax_appcompat_ver = '1.2.0'
        ax_activity_ver = '1.1.0'
        ax_annot_ver = '1.1.0'

        constr_ver = '2.0.2'

        retrofit_ver = '2.9.0'
        moshi_ver = '1.11.0'
        okhttp_ver = '4.9.0'
        mdc_ver = '1.2.1'
        epoxy_ver = '4.1.0'

        oauth2_ver = '1.2.2'

        ktlint_ver = '0.39.0'

        test_ver = '1.3.0'
        espresso_ver = '3.3.0'
        junit_ver = '1.1.2'
        leakcanary_ver = '2.5'
        mockito_ver = '3.6.0'
        arch_core_ver = '2.1.0'
        orchestrator_ver = '1.3.0'

        dokka_ver = '0.10.1'
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${android_gradle_ver}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_ver"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_ver"
    }
}

/*plugins {
    id "io.gitlab.arturbosch.detekt" version "1.12.0"
}*/

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

subprojects {

    // ktlint
    apply plugin: 'checkstyle'
    apply from: "${project.rootDir}/ktlint.gradle"

    task checkstyle(type: Checkstyle) {
        configFile rootProject.file('checkstyle.xml')
        source 'src/main/java'
        ignoreFailures false
        showViolations true
        include '**/*.java'

        classpath = files()
    }

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
            check.dependsOn('ktlint')
        }

        if (project.tasks.findByName('dokka')) {
            check.dependsOn('dokka')
        }
    }

    // detekt
    /*detekt {
        toolVersion = "1.12.0"
        input = files("$projectDir")
        config = files("${project.rootDir}/config/detekt/detekt.yml")
        reports {
            html {
                enabled = true
                destination = file("$project.projectDir/detekt-report.html")
            }
        }
    }*/
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
